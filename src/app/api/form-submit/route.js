import {NextResponse} from 'next/server';

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

export async function POST(request) {
    try {
        const {formType, ...formData} = await request.json();

        if (!formType) {
            return NextResponse.json({error: '–ù–µ —É–∫–∞–∑–∞–Ω —Ç–∏–ø —Ñ–æ—Ä–º—ã'}, {status: 400});
        }

        switch (formType) {
            case 'order':
                if (!formData) {
                    return NextResponse.json({error: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'}, {status: 400});
                }

                const messageText = `
üìå –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê

üõí –¢–æ–≤–∞—Ä: ${formData.product} (–ê—Ä—Ç–∏–∫—É–ª: ${formData.id})
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${formData.price}
üë§ –ò–º—è: ${formData.name}
üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${formData.contactType} ${formData.contact}
                `.trim();

                if (formData.photo) {
                    await sendTelegramPhoto({
                        photo: formData.photo, caption: messageText
                    });
                } else {
                    await sendTelegramMessage(messageText);
                }
                break;

            default:
                return NextResponse.json({error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–æ—Ä–º—ã'}, {status: 400});
        }

        return NextResponse.json({message: '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!'}, {status: 200});

    } catch (error) {
        console.error('Server error:', error);
        return NextResponse.json({error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}, {status: 500});
    }
}

async function sendTelegramPhoto({photo, caption = ''}) {
    const formData = new FormData();
    formData.append('photo', photo);
    formData.append('chat_id', TELEGRAM_CHAT_ID);
    formData.append('caption', caption);
    formData.append('parse_mode', 'HTML');

    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendPhoto`, {
        method: 'POST', body: formData
    });

    if (!response.ok) {
        throw new Error(`Telegram API error: ${await response.text()}`);
    }

    return response.json();
}

async function sendTelegramMessage(text) {
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST', headers: {
            'Content-Type': 'application/json',
        }, body: JSON.stringify({
            chat_id: TELEGRAM_CHAT_ID, text: text, parse_mode: 'HTML'
        })
    });

    if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ Telegram API: ${await response.text()}`);
    }

    return response.json();
}